resources:
- name: rootfs
  type: docker-image
  source:
    repository: packs/cf
    tag: run
- name: repo
  type: git
  source:
    uri: https://github.com/making/hello-servlet.git
    branch: master
- name: dockerhub
  type: docker-image
  source:
    repository: making/hello-servlet
    username: ((registry-username))
    password: ((registry-password))

jobs:
- name: build-image
  plan:
  - aggregate:
    - get: repo
      trigger: true
    - get: rootfs
      trigger: true
      params:
        save: true
  - task: mvn-package
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: maven
      inputs:
      - name: repo
      outputs:
      - name: build
      caches:
      - path: repo/m2
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          cd repo
          rm -rf ~/.m2
          ln -fs $(pwd)/m2 ~/.m2
          mvn package -DskipTests=true
          mv target/ROOT.war ../build
  - task: build-droplet
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: 
          repository: packs/cf
          tag: build
      inputs:
      - name: repo
      - name: build
      outputs:
      - name: out
      run:
        path: bash
        args:
        - -c
        - |
          set -e
          DIR=$(pwd)
          cd ${DIR}/repo
          export PACK_APP_ZIP=${DIR}/build/ROOT.war
          /packs/builder \
            -buildpacksDir /var/lib/buildpacks \
            -outputMetadata ${DIR}/out/result.json \
            -outputDroplet ${DIR}/out/hello-servlet-$(git rev-parse HEAD).droplet
  - task: create-dockerfile
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
          tag: latest
      inputs:
      - name: out
      outputs:
      - name: image
      run:
        path: sh
        args:
        - -c
        - |
          set -e
          cp out/*.droplet image/droplet.tgz
          cat <<'EOF' > image/Dockerfile
          FROM packs/cf:run
          ADD droplet.tgz /home/vcap
          ENTRYPOINT ["/packs/launcher"]
          EOF
  - put: dockerhub
    params:
      load_base: rootfs
      build: image